{"version":3,"sources":["Components/profile/social-profile/preview.png","Components/profile/styles.js","Components/profile/Profile.js","Components/statistics/Statistics.js","Components/friendList/FriendList.js","Components/transactionHistory/TransactionHistory.js","App.js","index.js"],"names":["Wrapper","styled","div","Avatar","img","Profile","name","tag","location","avatar","stats","className","src","alt","width","renderStats","statsKeys","Object","keys","map","item","defaultProps","preview","styles","section","display","color","flexDirection","alignItems","list","margin","padding","listStyle","borderRight","borderLeft","justifyContent","height","marginBottom","Statistics","title","style","backgroundColor","Math","floor","random","toString","label","percentage","id","FriendList","friends","friend","isOnline","TransactionHistory","items","type","amount","currency","App","user","statisticalData","transactions","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4922ff3c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/preview.c18b8089.png\";","import styled from \"styled-components\";\r\n\r\nconst Wrapper = styled.div`\r\ndisplay: flex;\r\nflex-direction: column;\r\njustify-content: center;\r\nalign-items: center;\r\nborder: 1px solid black;\r\nborder-radius: 5px;\r\nfont-size: 20px;\r\ncolor: red;\r\n`;\r\n\r\nconst Avatar = styled.img`\r\nborder-radius: 50%;\r\n`\r\n\r\n\r\nexport  {Wrapper,Avatar}\r\n ","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport preview from \"./social-profile/preview.png\";\r\nimport {Wrapper,Avatar} from \"./styles\";\r\n\r\nconst Profile = ({ name, tag, location, avatar, stats }) => {\r\n  return (\r\n    <div className=\"profile\">\r\n      <Wrapper className=\"description\">\r\n        <Avatar\r\n          src={avatar}\r\n          alt=\"Аватар пользователя\"\r\n          className=\"avatar\"\r\n          width=\"120\"\r\n        />\r\n        <p className=\"name\">{name}</p>\r\n        <p className=\"tag\">{`@${tag}`}</p>\r\n        <p className=\"location\">{location}</p>\r\n        {renderStats(stats)}\r\n      </Wrapper>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction renderStats(stats) {\r\n  const statsKeys = Object.keys(stats);\r\n  return (\r\n    <ul className=\"stats\">\r\n      {statsKeys.map((item) => {\r\n        return (\r\n          <li key={item}>\r\n            <span className=\"label\">{item}</span>\r\n            <span className=\"quantity\">{stats[item]}</span>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n}\r\n\r\nProfile.defaultProps = {\r\n  avatar: preview,\r\n};\r\n\r\nProfile.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  tag: PropTypes.string.isRequired,\r\n  location: PropTypes.string.isRequired,\r\n  avatar: PropTypes.string,\r\n  stats: PropTypes.shape({\r\n    followers: PropTypes.number.isRequired,\r\n    views: PropTypes.number.isRequired,\r\n    likes: PropTypes.number.isRequired,\r\n  }),\r\n};\r\n\r\nexport default Profile;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst randomColor = () => Math.floor(Math.random() * 16777215).toString(16);\r\n\r\nconst styles = {\r\n  section: {\r\n    display: 'flex',\r\n    color: 'black',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n\r\n  list: {\r\n    margin: 0,\r\n    padding: 0,\r\n    listStyle: 'none',\r\n    display: 'flex',\r\n    borderRight: '2px solid black',\r\n    borderLeft: '2px solid black',\r\n  },\r\n\r\n  item: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    width: 80,\r\n    height: 80,\r\n    marginBottom: 0,\r\n  },\r\n};\r\n\r\nconst Statistics = ({ title, stats }) => (\r\n  <section className=\"statistics\" style={styles.section}>\r\n    {title && <h2 className=\"title\">{title}</h2>}\r\n    <ul className=\"stat-list\" style={styles.list}>\r\n      {stats.map(item => (\r\n        <li\r\n          className=\"item\"\r\n          key={item.id}\r\n          style={{\r\n            ...styles.item,\r\n            backgroundColor: '#' + randomColor(),\r\n          }}\r\n        >\r\n          <span className=\"label\">{item.label}</span>\r\n          <span className=\"percentage\">{item.percentage + '%'}</span>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  </section>\r\n);\r\n\r\nStatistics.defaultProps = {\r\n  title: '',\r\n};\r\n\r\nStatistics.propTypes = {\r\n  title: PropTypes.string,\r\n  stats: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      label: PropTypes.string.isRequired,\r\n      percentage: PropTypes.number.isRequired,\r\n    }),\r\n  ),\r\n};\r\n\r\nexport default Statistics;\r\n","import React from 'react';\r\nimport './FriendList.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst FriendList = ({ friends }) => (\r\n  <ul className=\"friend-list\">\r\n    {friends.map(friend => (\r\n      <li\r\n        className=\"item\"\r\n        key={friend.id}\r\n        style={{ backgroundColor: friend.isOnline ? 'green' : 'red' }}\r\n      >\r\n        <span className=\"status\">{friend.isOnline}</span>\r\n        <img\r\n          className=\"avatar\"\r\n          src={friend.avatar}\r\n          alt={friend.name}\r\n          width=\"48\"\r\n        />\r\n        <p className=\"name\">{friend.name}</p>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nFriendList.propTypes = {\r\n  friends: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string.isRequired,\r\n      id: PropTypes.number.isRequired,\r\n      isOnline: PropTypes.bool.isRequired,\r\n      avatar: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n};\r\n\r\nexport default FriendList;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst TransactionHistory = ({ items }) => (\r\n  <table className=\"transaction-history\">\r\n    <thead>\r\n      <tr>\r\n        <th>Type</th>\r\n        <th>Amount</th>\r\n        <th>Currency</th>\r\n      </tr>\r\n    </thead>\r\n\r\n    <tbody>\r\n      {items.map(item => (\r\n        <tr key={item.id}>\r\n          <td>{item.type}</td>\r\n          <td>{item.amount}</td>\r\n          <td>{item.currency}</td>\r\n        </tr>\r\n      ))}\r\n    </tbody>\r\n  </table>\r\n);\r\n\r\nTransactionHistory.propTypes = {\r\n  items: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      type: PropTypes.string.isRequired,\r\n      amount: PropTypes.string.isRequired,\r\n      currency: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n};\r\n\r\nexport default TransactionHistory;\r\n","import React from 'react';\r\nimport Profile from './Components/profile/Profile';\r\nimport user from './Components/profile/social-profile/user.json';\r\nimport statisticalData from './Components/statistics/statistics/statistical-data.json';\r\nimport Statistics from './Components/statistics/Statistics';\r\nimport friends from './Components/friendList/friend-list/friends.json';\r\nimport FriendList from './Components/friendList/FriendList';\r\nimport transactions from './Components/transactionHistory/transaction-history/transactions.json';\r\nimport TransactionHistory from './Components/transactionHistory/TransactionHistory';\r\n\r\nconst App = () => {\r\n  return (\r\n    <>\r\n      <Profile\r\n        name={user.name}\r\n        tag={user.tag}\r\n        location={user.location}\r\n        avatar={user.avatar}\r\n        stats={user.stats}\r\n      />\r\n      <Statistics title=\"Upload stats\" stats={statisticalData} />\r\n      <Statistics stats={statisticalData} />\r\n      <FriendList friends={friends} />\r\n      <TransactionHistory items={transactions} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport 'modern-normalize/modern-normalize.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// reportWebVitals();\r\n"],"sourceRoot":""}